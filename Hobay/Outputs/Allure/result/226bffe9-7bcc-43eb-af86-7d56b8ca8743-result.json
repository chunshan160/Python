{"name": "test_commission[item4]", "status": "failed", "statusDetails": {"message": "AssertionError: assert (10, 2, 3, De...978.68'), ...) == (10, 2, 3, Dec...978.68'), ...)\n  At index 3 diff: Decimal('93.00') != Decimal('96.00')\n  Full diff:\n  (10,\n  2,\n  3,\n  -  Decimal('93.00'),\n  ?            ^...\n  \n  ...Full output truncated (10 lines hidden), use '-vv' to show", "trace": "self = <Hobay.TestCases.Commission.test_commission.TestCommission object at 0x0000021B86AB8340>\nitem = {'bind_relationship_data': \"{'储备金二级分佣对象': {'TCO': 1000794, '买家上级的上级id': None, '买家上级的上级身份': None}, '支付服务费二级分佣对象': {'TCO... 'case_id': 5, 'data': '{\"buyer_phone\":17777777781,\"seller_phone\":17777777776,\"买家\":1000656,\"卖家\":1000650,\"平台\":10}', ...}\n\n    @allure.story(\"测试分佣\")\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"item\", test_data)\n    def test_commission(self, item):\n        my_logger.info(f\"---------------------------------------------------\")\n        my_logger.info(f\"----------开始执行用例{item['case_id']}，环境是{item['surroundings']}----------\")\n    \n        ip = item['ip']\n        data = eval(item['data'])\n        buyer_phone = data['buyer_phone']\n        seller_phone = data['seller_phone']\n        buyer_id = data[\"买家\"]\n        seller_id=data[\"卖家\"]\n    \n        with allure.step(\"获取绑定关系\"):\n            superior = SuperiorTemplate().superior_template_main(ip, item['payment_method'], item['data'], buyer_phone)\n        # 环境\n        surroundings = item['surroundings']\n        with allure.step(\"Boss后台运营设置\"):\n            operational_setting = eval(item['operational_setting'])\n    \n        my_logger.info(\"----------开始BOSS后台设置运营分佣比例操作----------\")\n    \n        with allure.step(\"Boss后台设置运营分佣比例\"):\n            BossSetting().main(ip, surroundings, item['payment_method'], superior, operational_setting)\n    \n        my_logger.info(\"----------BOSS后台运营分佣比例设置完毕----------\")\n    \n        my_logger.info(\"----------开始执行前端操作----------\")\n    \n        buyer_identity = item['buyer_identity']\n        seller_identity = item['seller_identity']\n        # 支付密码\n        payPassword = get_js('runs', item['payPassword'])\n        if buyer_identity == \"公海用户\":\n            if seller_identity == \"个人焕商\" or seller_identity == \"非焕商且已绑定个人焕商\":\n                my_logger.info(\"----------开始充值服务费----------\")\n                with allure.step(\"充值\"):\n                    recharge_behavior(surroundings, buyer_phone, payPassword)\n                with allure.step(\"写回储备池和充值金额\"):\n                    reserve_fund_data = reserve_fund_sql(ip, buyer_id)\n                    DoExcel.write_back_reserve_fund(test_data_path, item['sheet_name'], item['case_id'],\n                                                    str(reserve_fund_data))\n    \n        if item['payment_method'] == \"易贝\":\n            payType = 3\n        elif item['payment_method'] == \"易贝券\":\n            payType = 4\n        elif item['payment_method'] == \"家人购\":\n            payType = 5\n        elif item['payment_method'] == \"抵工资\":\n            payType = 6\n        elif item['payment_method'] == \"现金\":\n            payType = 7\n    \n        my_logger.info(\"----------开始购买商品----------\")\n        # 根据商品名判断流程\n        if \"实物商品\" in item['goodsname']:\n            with allure.step(\"购买实物商品\"):\n                order = bug_entity_goods(surroundings, buyer_phone, seller_phone, item['goodsname'], payType,\n                                         payPassword)\n    \n        elif \"本地生活\" in item['goodsname']:\n            with allure.step(\"购买本地生活\"):\n                order = buy_coupon_goods(surroundings, buyer_phone, seller_phone, item['goodsname'], payType,\n                                         payPassword)\n    \n        elif \"商企服务\" in item['goodsname']:\n            with allure.step(\"购买商企服务\"):\n                order = buy_server_goods(surroundings, buyer_phone, seller_phone, item['goodsname'], payType,\n                                         payPassword)\n    \n        with allure.step(\"写回订单号\"):\n            # buyerid = data['买家']\n            DoExcel.get_order(test_data_path, item['sheet_name'], item['case_id'], order)\n    \n        with allure.step(\"获取绑定关系，写回Excel\"):\n            superior = SuperiorTemplate().superior_template_main(ip, item['payment_method'], item['data'], buyer_phone)\n            DoExcel.superior(test_data_path, item['sheet_name'], item['case_id'], str(superior))\n    \n        with allure.step(\"获取上级分佣比例，写回Excel\"):\n            proportion = SuperiorTemplate().fenyong_template_main(ip, item['payment_method'], superior)\n            DoExcel.fenyong_bili(test_data_path, item['sheet_name'], item['case_id'], str(proportion))\n    \n        if buyer_identity == \"公海用户\":\n            if seller_identity == \"个人焕商\" or seller_identity == \"非焕商且已绑定个人焕商\":\n                my_logger.info(\"----------开始解除绑定关系----------\")\n                with allure.step(\"买家和卖家解绑\"):\n                    if seller_identity == \"个人焕商\":\n                        delete_partner(surroundings, seller_phone, buyer_id)\n                    elif seller_identity == \"非焕商且已绑定个人焕商\":\n                        bangding_phone = data['bangding_phone']\n                        delete_partner(surroundings, bangding_phone, buyer_id)\n    \n        my_logger.info(\"----------前端操作执行完毕----------\")\n    \n        with allure.step(\"查询买家是否绑定销售/业务焕商/TCO\"):\n            with allure.step(\"获取买家绑定的销售/业务焕商/TCO\"):\n                if item['payment_method'] in [\"易贝\", \"易贝券\"]:\n                    bind_buyer_relationship_data = BingRelationshipData().bing_relationship_data(ip,\n                                                                                                 item['payment_method'],\n                                                                                                 data, buyer_id)\n                    with allure.step(\"把买家上级销售/业务焕商的上级写回Excel\"):\n                        DoExcel().bing_sale_id(test_data_path, item['sheet_name'], item['case_id'],\n                                               str(bind_buyer_relationship_data))\n    \n                elif item['payment_method'] in [\"抵工资\", \"家人购\", \"现金\"]:\n                    bind_relationship_data = BingRelationshipData().bing_relationship_data(ip, item['payment_method'],\n                                                                                           data,\n                                                                                           buyer_id)\n                    bind_buyer_relationship_data = bind_relationship_data[0]\n                    bind_payer_relationship_data = bind_relationship_data[1]\n                    with allure.step(\"把买家上级销售/业务焕商的上级写回Excel\"):\n                        bind_buyer_relationship_id = {\"储备金二级分佣对象\": bind_buyer_relationship_data,\n                                                      \"支付服务费二级分佣对象\": bind_payer_relationship_data}\n                        DoExcel().bing_sale_id(test_data_path, item['sheet_name'], item['case_id'],\n                                               str(bind_buyer_relationship_id))\n    \n        with allure.step(\"获取这笔订单应该【使用】的二级分佣比例\"):\n    \n            transaction_second_payagent_ratio = TransactionSecondPayagentRatio().transaction_second_payagent_ratio(ip,\n                                                                                                                   item[\n                                                                                                                       'payment_method'],\n                                                                                                                   superior,\n                                                                                                                   data)\n            with allure.step(\"把这笔订单所使用的二级分佣比例写回Excel\"):\n                DoExcel().second_payagent_ratio(test_data_path, item['sheet_name'], item['case_id'],\n                                                str(transaction_second_payagent_ratio))\n    \n        my_logger.info(\"----------开始进行对比----------\")\n    \n        buyer_identity = item['buyer_identity']\n        seller_identity = item['seller_identity']\n        data = eval(item['data'])\n    \n        try:\n            if buyer_identity == \"公海用户\":\n                if seller_identity == \"个人焕商\" or seller_identity == \"非焕商且已绑定个人焕商\":\n                    charge_amount = reserve_fund_data['charge_amount']\n                    reserve_fund = reserve_fund_data['reserve_fund']\n                else:\n                    charge_amount = None\n                    reserve_fund = None\n            else:\n                charge_amount = None\n                reserve_fund = None\n    \n            if item['payment_method'] in [\"易贝\", \"易贝券\"]:\n                calculation_data = CalculationData().calculation_data(ip, item['payment_method'], item['member_level'],\n                                                                  buyer_identity, seller_identity, proportion,\n                                                                  charge_amount, reserve_fund, order,buyer_id)\n    \n            elif item['payment_method'] in [\"抵工资\", \"家人购\"]:\n                buyer_id=data[\"出钱方\"]\n                calculation_data = CalculationData().calculation_data(ip, item['payment_method'], item['member_level'],\n                                                                  buyer_identity, seller_identity, proportion,\n                                                                  charge_amount, reserve_fund, order,buyer_id)\n    \n            else:\n                calculation_data = CalculationData().calculation_data(ip, item['payment_method'], item['member_level'],\n                                                                      buyer_identity, seller_identity, proportion,\n                                                                      charge_amount, reserve_fund, order, seller_id)\n    \n            if item['payment_method'] in [\"易贝\", \"易贝券\"]:\n                bind_buyer_relationship_data = bind_buyer_relationship_data\n                expected_moban = MoBan(buyer_identity, seller_identity, item['member_level'], item['payment_method'],\n                                       order).expected_moban(ip, data, superior, reserve_fund, calculation_data,\n                                                             transaction_second_payagent_ratio,\n                                                             bind_buyer_relationship_data)\n    \n            elif item['payment_method'] in [\"抵工资\", \"家人购\", \"现金\"]:\n                bind_buyer_relationship_data = bind_buyer_relationship_id['储备金二级分佣对象']\n                bind_payer_relationship_data = bind_buyer_relationship_id['支付服务费二级分佣对象']\n                expected_moban = MoBan(buyer_identity, seller_identity, item['member_level'], item['payment_method'],\n                                       order).expected_moban(ip, data, superior, reserve_fund, calculation_data,\n                                                             transaction_second_payagent_ratio,\n                                                             bind_buyer_relationship_data, bind_payer_relationship_data)\n    \n            # 写回Excel用\n            fanhui = fan_hui(ip, order, expected_moban)\n    \n            sql_data = wallet_detail(ip, order)\n    \n            for i in range(0, len(expected_moban)):\n                assert expected_moban[i] == sql_data[i]\n            my_logger.info(\"用例{0}正确！{1}\".format(item['case_id'], item['title']))\n            TestResult = 'Pass'\n            Error = None\n    \n        except AssertionError as e:\n            my_logger.info(\"用例错误！错误原因是第{0}行，{1}：\".format(i + 1, e))\n            TestResult = 'Failed'\n            Error = \"用例错误！错误原因是：第{0}行，{1}：\".format(i + 1, e)\n>           raise e  # 异常处理完后记得抛出\n\ntest_commission.py:230: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Hobay.TestCases.Commission.test_commission.TestCommission object at 0x0000021B86AB8340>\nitem = {'bind_relationship_data': \"{'储备金二级分佣对象': {'TCO': 1000794, '买家上级的上级id': None, '买家上级的上级身份': None}, '支付服务费二级分佣对象': {'TCO... 'case_id': 5, 'data': '{\"buyer_phone\":17777777781,\"seller_phone\":17777777776,\"买家\":1000656,\"卖家\":1000650,\"平台\":10}', ...}\n\n    @allure.story(\"测试分佣\")\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"item\", test_data)\n    def test_commission(self, item):\n        my_logger.info(f\"---------------------------------------------------\")\n        my_logger.info(f\"----------开始执行用例{item['case_id']}，环境是{item['surroundings']}----------\")\n    \n        ip = item['ip']\n        data = eval(item['data'])\n        buyer_phone = data['buyer_phone']\n        seller_phone = data['seller_phone']\n        buyer_id = data[\"买家\"]\n        seller_id=data[\"卖家\"]\n    \n        with allure.step(\"获取绑定关系\"):\n            superior = SuperiorTemplate().superior_template_main(ip, item['payment_method'], item['data'], buyer_phone)\n        # 环境\n        surroundings = item['surroundings']\n        with allure.step(\"Boss后台运营设置\"):\n            operational_setting = eval(item['operational_setting'])\n    \n        my_logger.info(\"----------开始BOSS后台设置运营分佣比例操作----------\")\n    \n        with allure.step(\"Boss后台设置运营分佣比例\"):\n            BossSetting().main(ip, surroundings, item['payment_method'], superior, operational_setting)\n    \n        my_logger.info(\"----------BOSS后台运营分佣比例设置完毕----------\")\n    \n        my_logger.info(\"----------开始执行前端操作----------\")\n    \n        buyer_identity = item['buyer_identity']\n        seller_identity = item['seller_identity']\n        # 支付密码\n        payPassword = get_js('runs', item['payPassword'])\n        if buyer_identity == \"公海用户\":\n            if seller_identity == \"个人焕商\" or seller_identity == \"非焕商且已绑定个人焕商\":\n                my_logger.info(\"----------开始充值服务费----------\")\n                with allure.step(\"充值\"):\n                    recharge_behavior(surroundings, buyer_phone, payPassword)\n                with allure.step(\"写回储备池和充值金额\"):\n                    reserve_fund_data = reserve_fund_sql(ip, buyer_id)\n                    DoExcel.write_back_reserve_fund(test_data_path, item['sheet_name'], item['case_id'],\n                                                    str(reserve_fund_data))\n    \n        if item['payment_method'] == \"易贝\":\n            payType = 3\n        elif item['payment_method'] == \"易贝券\":\n            payType = 4\n        elif item['payment_method'] == \"家人购\":\n            payType = 5\n        elif item['payment_method'] == \"抵工资\":\n            payType = 6\n        elif item['payment_method'] == \"现金\":\n            payType = 7\n    \n        my_logger.info(\"----------开始购买商品----------\")\n        # 根据商品名判断流程\n        if \"实物商品\" in item['goodsname']:\n            with allure.step(\"购买实物商品\"):\n                order = bug_entity_goods(surroundings, buyer_phone, seller_phone, item['goodsname'], payType,\n                                         payPassword)\n    \n        elif \"本地生活\" in item['goodsname']:\n            with allure.step(\"购买本地生活\"):\n                order = buy_coupon_goods(surroundings, buyer_phone, seller_phone, item['goodsname'], payType,\n                                         payPassword)\n    \n        elif \"商企服务\" in item['goodsname']:\n            with allure.step(\"购买商企服务\"):\n                order = buy_server_goods(surroundings, buyer_phone, seller_phone, item['goodsname'], payType,\n                                         payPassword)\n    \n        with allure.step(\"写回订单号\"):\n            # buyerid = data['买家']\n            DoExcel.get_order(test_data_path, item['sheet_name'], item['case_id'], order)\n    \n        with allure.step(\"获取绑定关系，写回Excel\"):\n            superior = SuperiorTemplate().superior_template_main(ip, item['payment_method'], item['data'], buyer_phone)\n            DoExcel.superior(test_data_path, item['sheet_name'], item['case_id'], str(superior))\n    \n        with allure.step(\"获取上级分佣比例，写回Excel\"):\n            proportion = SuperiorTemplate().fenyong_template_main(ip, item['payment_method'], superior)\n            DoExcel.fenyong_bili(test_data_path, item['sheet_name'], item['case_id'], str(proportion))\n    \n        if buyer_identity == \"公海用户\":\n            if seller_identity == \"个人焕商\" or seller_identity == \"非焕商且已绑定个人焕商\":\n                my_logger.info(\"----------开始解除绑定关系----------\")\n                with allure.step(\"买家和卖家解绑\"):\n                    if seller_identity == \"个人焕商\":\n                        delete_partner(surroundings, seller_phone, buyer_id)\n                    elif seller_identity == \"非焕商且已绑定个人焕商\":\n                        bangding_phone = data['bangding_phone']\n                        delete_partner(surroundings, bangding_phone, buyer_id)\n    \n        my_logger.info(\"----------前端操作执行完毕----------\")\n    \n        with allure.step(\"查询买家是否绑定销售/业务焕商/TCO\"):\n            with allure.step(\"获取买家绑定的销售/业务焕商/TCO\"):\n                if item['payment_method'] in [\"易贝\", \"易贝券\"]:\n                    bind_buyer_relationship_data = BingRelationshipData().bing_relationship_data(ip,\n                                                                                                 item['payment_method'],\n                                                                                                 data, buyer_id)\n                    with allure.step(\"把买家上级销售/业务焕商的上级写回Excel\"):\n                        DoExcel().bing_sale_id(test_data_path, item['sheet_name'], item['case_id'],\n                                               str(bind_buyer_relationship_data))\n    \n                elif item['payment_method'] in [\"抵工资\", \"家人购\", \"现金\"]:\n                    bind_relationship_data = BingRelationshipData().bing_relationship_data(ip, item['payment_method'],\n                                                                                           data,\n                                                                                           buyer_id)\n                    bind_buyer_relationship_data = bind_relationship_data[0]\n                    bind_payer_relationship_data = bind_relationship_data[1]\n                    with allure.step(\"把买家上级销售/业务焕商的上级写回Excel\"):\n                        bind_buyer_relationship_id = {\"储备金二级分佣对象\": bind_buyer_relationship_data,\n                                                      \"支付服务费二级分佣对象\": bind_payer_relationship_data}\n                        DoExcel().bing_sale_id(test_data_path, item['sheet_name'], item['case_id'],\n                                               str(bind_buyer_relationship_id))\n    \n        with allure.step(\"获取这笔订单应该【使用】的二级分佣比例\"):\n    \n            transaction_second_payagent_ratio = TransactionSecondPayagentRatio().transaction_second_payagent_ratio(ip,\n                                                                                                                   item[\n                                                                                                                       'payment_method'],\n                                                                                                                   superior,\n                                                                                                                   data)\n            with allure.step(\"把这笔订单所使用的二级分佣比例写回Excel\"):\n                DoExcel().second_payagent_ratio(test_data_path, item['sheet_name'], item['case_id'],\n                                                str(transaction_second_payagent_ratio))\n    \n        my_logger.info(\"----------开始进行对比----------\")\n    \n        buyer_identity = item['buyer_identity']\n        seller_identity = item['seller_identity']\n        data = eval(item['data'])\n    \n        try:\n            if buyer_identity == \"公海用户\":\n                if seller_identity == \"个人焕商\" or seller_identity == \"非焕商且已绑定个人焕商\":\n                    charge_amount = reserve_fund_data['charge_amount']\n                    reserve_fund = reserve_fund_data['reserve_fund']\n                else:\n                    charge_amount = None\n                    reserve_fund = None\n            else:\n                charge_amount = None\n                reserve_fund = None\n    \n            if item['payment_method'] in [\"易贝\", \"易贝券\"]:\n                calculation_data = CalculationData().calculation_data(ip, item['payment_method'], item['member_level'],\n                                                                  buyer_identity, seller_identity, proportion,\n                                                                  charge_amount, reserve_fund, order,buyer_id)\n    \n            elif item['payment_method'] in [\"抵工资\", \"家人购\"]:\n                buyer_id=data[\"出钱方\"]\n                calculation_data = CalculationData().calculation_data(ip, item['payment_method'], item['member_level'],\n                                                                  buyer_identity, seller_identity, proportion,\n                                                                  charge_amount, reserve_fund, order,buyer_id)\n    \n            else:\n                calculation_data = CalculationData().calculation_data(ip, item['payment_method'], item['member_level'],\n                                                                      buyer_identity, seller_identity, proportion,\n                                                                      charge_amount, reserve_fund, order, seller_id)\n    \n            if item['payment_method'] in [\"易贝\", \"易贝券\"]:\n                bind_buyer_relationship_data = bind_buyer_relationship_data\n                expected_moban = MoBan(buyer_identity, seller_identity, item['member_level'], item['payment_method'],\n                                       order).expected_moban(ip, data, superior, reserve_fund, calculation_data,\n                                                             transaction_second_payagent_ratio,\n                                                             bind_buyer_relationship_data)\n    \n            elif item['payment_method'] in [\"抵工资\", \"家人购\", \"现金\"]:\n                bind_buyer_relationship_data = bind_buyer_relationship_id['储备金二级分佣对象']\n                bind_payer_relationship_data = bind_buyer_relationship_id['支付服务费二级分佣对象']\n                expected_moban = MoBan(buyer_identity, seller_identity, item['member_level'], item['payment_method'],\n                                       order).expected_moban(ip, data, superior, reserve_fund, calculation_data,\n                                                             transaction_second_payagent_ratio,\n                                                             bind_buyer_relationship_data, bind_payer_relationship_data)\n    \n            # 写回Excel用\n            fanhui = fan_hui(ip, order, expected_moban)\n    \n            sql_data = wallet_detail(ip, order)\n    \n            for i in range(0, len(expected_moban)):\n>               assert expected_moban[i] == sql_data[i]\nE               AssertionError: assert (10, 2, 3, De...978.68'), ...) == (10, 2, 3, Dec...978.68'), ...)\nE                 At index 3 diff: Decimal('93.00') != Decimal('96.00')\nE                 Full diff:\nE                 (10,\nE                 2,\nE                 3,\nE                 -  Decimal('93.00'),\nE                 ?            ^...\nE                 \nE                 ...Full output truncated (10 lines hidden), use '-vv' to show\n\ntest_commission.py:221: AssertionError"}, "steps": [{"name": "获取绑定关系", "status": "passed", "start": 1604049675879, "stop": 1604049675962}, {"name": "Boss后台运营设置", "status": "passed", "start": 1604049675962, "stop": 1604049675962}, {"name": "Boss后台设置运营分佣比例", "status": "passed", "start": 1604049675963, "stop": 1604049677376}, {"name": "充值", "status": "passed", "start": 1604049677497, "stop": 1604049678640}, {"name": "写回储备池和充值金额", "status": "passed", "start": 1604049678640, "stop": 1604049679049}, {"name": "购买实物商品", "status": "passed", "start": 1604049679049, "stop": 1604049681638}, {"name": "写回订单号", "status": "passed", "start": 1604049681638, "stop": 1604049682033}, {"name": "获取绑定关系，写回Excel", "status": "passed", "start": 1604049682033, "stop": 1604049682510}, {"name": "获取上级分佣比例，写回Excel", "status": "passed", "start": 1604049682510, "stop": 1604049682922}, {"name": "买家和卖家解绑", "status": "passed", "start": 1604049682923, "stop": 1604049683096}, {"name": "查询买家是否绑定销售/业务焕商/TCO", "status": "passed", "steps": [{"name": "获取买家绑定的销售/业务焕商/TCO", "status": "passed", "steps": [{"name": "把买家上级销售/业务焕商的上级写回Excel", "status": "passed", "start": 1604049683148, "stop": 1604049683549}], "start": 1604049683096, "stop": 1604049683549}], "start": 1604049683096, "stop": 1604049683549}, {"name": "获取这笔订单应该【使用】的二级分佣比例", "status": "passed", "steps": [{"name": "把这笔订单所使用的二级分佣比例写回Excel", "status": "passed", "start": 1604049683562, "stop": 1604049684045}], "start": 1604049683549, "stop": 1604049684045}], "attachments": [{"name": "log", "source": "d66295a4-1200-4577-9cd0-2820a60ea311-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "item", "value": "{'case_id': 5, 'title': '目的：\\n买家为（公海用户）且绑定省代，市代，区代\\n卖家为（个人焕商）且绑定个人焕商，省代，市代，区代\\n\\n使用（现金账户）支付，确定核销，买家和卖家绑定关系，易贝和现金服务费分佣', 'member_level': '钻石会员', 'buyer_identity': '公海用户', 'seller_identity': '个人焕商', 'payment_method': '现金', 'goodsname': '普通焕商实物商品', 'data': '{\"buyer_phone\":17777777781,\"seller_phone\":17777777776,\"买家\":1000656,\"卖家\":1000650,\"平台\":10}', 'operational_setting': \"{'储备池分佣': {'省代理商': {'销售':0.3,'业务焕商':0,'TCO':0.3}, '市代理商': {'销售':0.3,'业务焕商':0,'TCO':0.3}, '区代理商': {'销售':0.3,'业务焕商':0,'TCO':0.3}}, '支付服务费分佣': {'市代理商': {'销售':0.3,'业务焕商':0,'TCO':0.3}, '区代理商': {'销售':0.3,'业务焕商':0,'TCO':0.3}, '省代理商': {'销售':0.3,'业务焕商':0,'TCO':0.3}}}\", 'proportion': \"{'储备池分佣': {'市分佣比例': Decimal('0.70'), '区分佣比例': Decimal('0.60'), '省分佣比例': Decimal('0.80'), '个人分佣比例': Decimal('0.15')}, '支付服务费分佣': {'市分佣比例': Decimal('0.70'), '区分佣比例': Decimal('0.60'), '个人分佣比例': Decimal('0.15'), '省分佣比例': Decimal('0.80')}}\", 'superior': \"{'储备池分佣': [{'个人焕商': 1000650}, {'省代理商': 1000646, '市代理商': 1000647, '区代理商': 1000648}], '支付服务费分佣': [{'个人焕商': 1001259}, {'省代理商': 1000646, '市代理商': 1000647, '区代理商': 1000648}]}\", 'order': 'EC-2020103014510300000526', 'reserve_fund': \"{'charge_amount': Decimal('100'), 'reserve_fund': Decimal('60.00')}\", 'bind_relationship_data': \"{'储备金二级分佣对象': {'TCO': 1000794, '买家上级的上级id': None, '买家上级的上级身份': None}, '支付服务费二级分佣对象': {'TCO': 1000794, '买家上级的上级id': None, '买家上级的上级身份': None}}\", 'second_payagent_ratio': \"{'储备金二级分佣比例': {'agent_id': 1000648, 'sales_ratio': Decimal('0.30'), 'tco_ratio': Decimal('0.30'), 'free_sales_ratio': Decimal('0.00')}, '支付服务费二级分佣比例': {'agent_id': 1000648, 'sales_ratio': Decimal('0.30'), 'tco_ratio': Decimal('0.30'), 'free_sales_ratio': Decimal('0.00')}}\", 'sheet_name': '焕商分佣_test', 'ip': '192.168.0.101', 'surroundings': 'test', 'payPassword': '123456'}"}], "start": 1604049675877, "stop": 1604049685879, "uuid": "53ae9c5c-d5c5-4288-8d64-8414d52225dd", "historyId": "3e7d2bab70e61b9d138d7e20f305c5bf", "fullName": "Commission.test_commission.TestCommission#test_commission[item4]", "labels": [{"name": "feature", "value": "测试分佣功能"}, {"name": "story", "value": "测试分佣"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Commission"}, {"name": "suite", "value": "test_commission"}, {"name": "subSuite", "value": "TestCommission"}, {"name": "host", "value": "DESKTOP-4EMDDAT"}, {"name": "thread", "value": "14056-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Commission.test_commission"}]}