{
  "uid" : "7467df8a08af18db",
  "name" : "test_2_buy_coupon_goods[MI 8-data3]",
  "fullName" : "Android.BuyGoods.test_BuyGoods.TestBuyGoods#test_2_buy_coupon_goods[MI 8-data3]",
  "historyId" : "e4aae2ecafcb649d5fd126b85eccb9f7",
  "time" : {
    "start" : 1599050456224,
    "stop" : 1599050491889,
    "duration" : 35665
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <Hobay.TestCases.Android.BuyGoods.test_BuyGoods.TestBuyGoods object at 0x000002E7611CB5E0>\nbuy_goods = <appium.webdriver.webdriver.WebDriver (session=\"4593b217-dedf-48be-9b12-32aa83b83320\")>\ndata = {'goods_name': 'APP本地生活', 'payment_method': '家人购'}\n\n    @allure.story(\"购买本地生活商品\")\n    @pytest.mark.smoke\n    @pytest.mark.usefixtures(\"buy_goods\")\n    @pytest.mark.parametrize(\"data\", buy_coupon_goods)\n    def test_2_buy_coupon_goods(self, buy_goods, data):\n        doc = \"测试购买本地生活商品-\"\n        with allure.step(\"首页点击搜索\"):\n            IndexPage(buy_goods).search(text=doc)\n        with allure.step(\"输入商品名-点击第一个商品-\"):\n>           SearchGoodPage(buy_goods).send_search(data['goods_name'], text=doc)\n\ntest_BuyGoods.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\PageObjects\\Android\\SearchGood\\SearchGood.py:18: in send_search\n    self.input_text(SearchGood.send_search,good_name,doc=doc)\n..\\..\\..\\Common\\BasePage.py:144: in input_text\n    self.wait_eleVisible(locator, doc=doc)\n..\\..\\..\\Common\\BasePage.py:61: in wait_eleVisible\n    WebDriverWait(self.driver, times, poll_frequency).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4593b217-dedf-48be-9b12-32aa83b83320\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000002E76114C580>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "buy_goods",
    "time" : {
      "start" : 1599050429802,
      "stop" : 1599050456224,
      "duration" : 26422
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <Hobay.TestCases.Android.BuyGoods.test_BuyGoods.TestBuyGoods object at 0x000002E7611CB5E0>\nbuy_goods = <appium.webdriver.webdriver.WebDriver (session=\"4593b217-dedf-48be-9b12-32aa83b83320\")>\ndata = {'goods_name': 'APP本地生活', 'payment_method': '家人购'}\n\n    @allure.story(\"购买本地生活商品\")\n    @pytest.mark.smoke\n    @pytest.mark.usefixtures(\"buy_goods\")\n    @pytest.mark.parametrize(\"data\", buy_coupon_goods)\n    def test_2_buy_coupon_goods(self, buy_goods, data):\n        doc = \"测试购买本地生活商品-\"\n        with allure.step(\"首页点击搜索\"):\n            IndexPage(buy_goods).search(text=doc)\n        with allure.step(\"输入商品名-点击第一个商品-\"):\n>           SearchGoodPage(buy_goods).send_search(data['goods_name'], text=doc)\n\ntest_BuyGoods.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\PageObjects\\Android\\SearchGood\\SearchGood.py:18: in send_search\n    self.input_text(SearchGood.send_search,good_name,doc=doc)\n..\\..\\..\\Common\\BasePage.py:144: in input_text\n    self.wait_eleVisible(locator, doc=doc)\n..\\..\\..\\Common\\BasePage.py:61: in wait_eleVisible\n    WebDriverWait(self.driver, times, poll_frequency).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4593b217-dedf-48be-9b12-32aa83b83320\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000002E76114C580>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "首页点击搜索",
      "time" : {
        "start" : 1599050456224,
        "stop" : 1599050460945,
        "duration" : 4721
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "输入商品名-点击第一个商品-",
      "time" : {
        "start" : 1599050460945,
        "stop" : 1599050491889,
        "duration" : 30944
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"D:\\Pycharm_workspace\\Hobay\\TestCases\\Android\\BuyGoods\\test_BuyGoods.py\", line 58, in test_2_buy_coupon_goods\n    SearchGoodPage(buy_goods).send_search(data['goods_name'], text=doc)\n  File \"D:\\Pycharm_workspace\\Hobay\\PageObjects\\Android\\SearchGood\\SearchGood.py\", line 18, in send_search\n    self.input_text(SearchGood.send_search,good_name,doc=doc)\n  File \"D:\\Pycharm_workspace\\Hobay\\Common\\BasePage.py\", line 144, in input_text\n    self.wait_eleVisible(locator, doc=doc)\n  File \"D:\\Pycharm_workspace\\Hobay\\Common\\BasePage.py\", line 61, in wait_eleVisible\n    WebDriverWait(self.driver, times, poll_frequency).until(EC.visibility_of_element_located(locator))\n  File \"D:\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "5e3533bf62b8c595",
      "name" : "log",
      "source" : "5e3533bf62b8c595.txt",
      "type" : "text/plain",
      "size" : 2797
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "buy_goods::0",
    "time" : {
      "start" : 1599050492189,
      "stop" : 1599050493289,
      "duration" : 1100
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "购买本地生活商品"
  }, {
    "name" : "feature",
    "value" : "购买商品功能"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "Android.BuyGoods"
  }, {
    "name" : "suite",
    "value" : "test_BuyGoods"
  }, {
    "name" : "subSuite",
    "value" : "TestBuyGoods"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4EMDDAT"
  }, {
    "name" : "thread",
    "value" : "4852-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Android.BuyGoods.test_BuyGoods"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "buy_goods",
    "value" : "'MI 8'"
  }, {
    "name" : "data",
    "value" : "{'goods_name': 'APP本地生活', 'payment_method': '家人购'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "smoke" ]
  },
  "source" : "7467df8a08af18db.json",
  "parameterValues" : [ "'MI 8'", "{'goods_name': 'APP本地生活', 'payment_method': '家人购'}" ]
}